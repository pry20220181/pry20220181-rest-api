// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using pry20220181_data_layer;

#nullable disable

namespace pry20220181_data_layer.Migrations
{
    [DbContext(typeof(PRY20220181DbContext))]
    [Migration("20220611205656_AddTablesRemaining")]
    partial class AddTablesRemaining
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("pry20220181_core_layer.Modules.Campaigns.Models.VaccinationCampaign", b =>
                {
                    b.Property<int>("VaccinationCampaignId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("EndDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("VaccinationCampaignId");

                    b.ToTable("VaccinationCampaigns");
                });

            modelBuilder.Entity("pry20220181_core_layer.Modules.Campaigns.Models.VaccinationCampaignDetail", b =>
                {
                    b.Property<int>("VaccinationCampaignDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("VaccinationCampaignId")
                        .HasColumnType("int");

                    b.Property<int>("VaccineId")
                        .HasColumnType("int");

                    b.HasKey("VaccinationCampaignDetailId");

                    b.HasIndex("VaccinationCampaignId");

                    b.HasIndex("VaccineId");

                    b.ToTable("VaccinationCampaignDetails");
                });

            modelBuilder.Entity("pry20220181_core_layer.Modules.Campaigns.Models.VaccinationCampaignLocation", b =>
                {
                    b.Property<int>("VaccinationCampaignLocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("HealthCenterId")
                        .HasColumnType("int");

                    b.Property<int>("VaccinationCampaignId")
                        .HasColumnType("int");

                    b.HasKey("VaccinationCampaignLocationId");

                    b.HasIndex("HealthCenterId");

                    b.HasIndex("VaccinationCampaignId");

                    b.ToTable("VaccinationCampaignLocations");
                });

            modelBuilder.Entity("pry20220181_core_layer.Modules.Inventory.Models.VaccineInventory", b =>
                {
                    b.Property<int>("VaccineInventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("HealthCenterId")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<int>("VaccineId")
                        .HasColumnType("int");

                    b.HasKey("VaccineInventoryId");

                    b.HasIndex("HealthCenterId");

                    b.HasIndex("VaccineId");

                    b.ToTable("VaccineInventory");
                });

            modelBuilder.Entity("pry20220181_core_layer.Modules.Master.Models.Reminder", b =>
                {
                    b.Property<int>("ReminderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DoseDetailId")
                        .HasColumnType("int");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("VaccinationAppointmentId")
                        .HasColumnType("int");

                    b.Property<int>("VaccinationCampaignId")
                        .HasColumnType("int");

                    b.Property<string>("Via")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ReminderId");

                    b.HasIndex("DoseDetailId");

                    b.HasIndex("ParentId");

                    b.HasIndex("VaccinationAppointmentId");

                    b.HasIndex("VaccinationCampaignId");

                    b.ToTable("Reminders");
                });

            modelBuilder.Entity("pry20220181_core_layer.Modules.Vaccination.Models.AdministeredDose", b =>
                {
                    b.Property<int>("AdministeredDoseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ChildId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DoseDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DoseDetailId")
                        .HasColumnType("int");

                    b.Property<int>("HealthCenterId")
                        .HasColumnType("int");

                    b.Property<int>("HealthPersonnelId")
                        .HasColumnType("int");

                    b.Property<int>("VaccinationAppointmentId")
                        .HasColumnType("int");

                    b.Property<int>("VaccinationCampaignId")
                        .HasColumnType("int");

                    b.HasKey("AdministeredDoseId");

                    b.HasIndex("ChildId");

                    b.HasIndex("DoseDetailId");

                    b.HasIndex("HealthCenterId");

                    b.HasIndex("HealthPersonnelId");

                    b.HasIndex("VaccinationAppointmentId");

                    b.HasIndex("VaccinationCampaignId");

                    b.ToTable("AdministeredDoses");
                });

            modelBuilder.Entity("pry20220181_core_layer.Modules.Vaccination.Models.Child", b =>
                {
                    b.Property<int>("ChildId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ChildId");

                    b.HasIndex("DNI")
                        .IsUnique();

                    b.ToTable("Children");
                });

            modelBuilder.Entity("pry20220181_core_layer.Modules.Vaccination.Models.ChildParent", b =>
                {
                    b.Property<int>("ChildParentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ChildId")
                        .HasColumnType("int");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("Relationship")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.HasKey("ChildParentId");

                    b.HasIndex("ChildId");

                    b.HasIndex("ParentId");

                    b.ToTable("ChildrenParents");
                });

            modelBuilder.Entity("pry20220181_core_layer.Modules.Vaccination.Models.DoseDetail", b =>
                {
                    b.Property<int>("DoseDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DoseNumber")
                        .HasColumnType("int");

                    b.Property<int>("PutBetweenEndMonth")
                        .HasColumnType("int");

                    b.Property<int>("PutBetweenStartMonth")
                        .HasColumnType("int");

                    b.Property<int>("PutEveryYear")
                        .HasColumnType("int");

                    b.Property<int>("PutMonthsAfterPreviousDosis")
                        .HasColumnType("int");

                    b.Property<int>("PutWhenHasMonths")
                        .HasColumnType("int");

                    b.Property<bool>("PutWhenNewBorn")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("VaccinationSchemeDetailId")
                        .HasColumnType("int");

                    b.HasKey("DoseDetailId");

                    b.HasIndex("VaccinationSchemeDetailId");

                    b.ToTable("DosesDetails");
                });

            modelBuilder.Entity("pry20220181_core_layer.Modules.Vaccination.Models.HealthCenter", b =>
                {
                    b.Property<int>("HealthCenterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UbigeoId")
                        .HasColumnType("int");

                    b.HasKey("HealthCenterId");

                    b.HasIndex("UbigeoId");

                    b.ToTable("HealthCenters");
                });

            modelBuilder.Entity("pry20220181_core_layer.Modules.Vaccination.Models.HealthPersonnel", b =>
                {
                    b.Property<int>("HealthPersonnelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("HealthPersonnelId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("HealthPersonnel");
                });

            modelBuilder.Entity("pry20220181_core_layer.Modules.Vaccination.Models.Parent", b =>
                {
                    b.Property<int>("ParentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UbigeoId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("ParentId");

                    b.HasIndex("UbigeoId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Parents");
                });

            modelBuilder.Entity("pry20220181_core_layer.Modules.Vaccination.Models.Ubigeo", b =>
                {
                    b.Property<int>("UbigeoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UbigeoCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UbigeoId");

                    b.ToTable("Ubigeo");
                });

            modelBuilder.Entity("pry20220181_core_layer.Modules.Vaccination.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("pry20220181_core_layer.Modules.Vaccination.Models.VaccinationAppointment", b =>
                {
                    b.Property<int>("VaccinationAppointmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("AppointmentDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("HealthCenterId")
                        .HasColumnType("int");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.HasKey("VaccinationAppointmentId");

                    b.HasIndex("HealthCenterId");

                    b.HasIndex("ParentId");

                    b.ToTable("VaccinationAppointments");
                });

            modelBuilder.Entity("pry20220181_core_layer.Modules.Vaccination.Models.VaccinationScheme", b =>
                {
                    b.Property<int>("VaccinationSchemeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("FinalAge")
                        .HasColumnType("int");

                    b.Property<int>("InitialAge")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("VaccinationSchemeId");

                    b.ToTable("VaccinationSchemes");
                });

            modelBuilder.Entity("pry20220181_core_layer.Modules.Vaccination.Models.VaccinationSchemeDetail", b =>
                {
                    b.Property<int>("VaccinationSchemeDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("NumberOfDosesToAdminister")
                        .HasColumnType("int");

                    b.Property<string>("PossibleEffectsPostVaccine")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("VaccinationSchemeId")
                        .HasColumnType("int");

                    b.Property<int>("VaccineId")
                        .HasColumnType("int");

                    b.HasKey("VaccinationSchemeDetailId");

                    b.HasIndex("VaccinationSchemeId");

                    b.HasIndex("VaccineId");

                    b.ToTable("VaccinationSchemeDetails");
                });

            modelBuilder.Entity("pry20220181_core_layer.Modules.Vaccination.Models.Vaccine", b =>
                {
                    b.Property<int>("VaccineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<float>("MaxTemperature")
                        .HasColumnType("float");

                    b.Property<float>("MinTemperature")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("VaccineId");

                    b.ToTable("Vaccines");
                });

            modelBuilder.Entity("pry20220181_core_layer.Modules.Vaccination.Models.VaccineForAppointment", b =>
                {
                    b.Property<int>("VaccineForAppointmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("VaccinationAppointmentId")
                        .HasColumnType("int");

                    b.Property<int>("VaccineId")
                        .HasColumnType("int");

                    b.HasKey("VaccineForAppointmentId");

                    b.HasIndex("VaccinationAppointmentId");

                    b.HasIndex("VaccineId");

                    b.ToTable("VaccinesForAppointments");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("pry20220181_core_layer.Modules.Vaccination.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("pry20220181_core_layer.Modules.Vaccination.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pry20220181_core_layer.Modules.Vaccination.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("pry20220181_core_layer.Modules.Vaccination.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("pry20220181_core_layer.Modules.Campaigns.Models.VaccinationCampaignDetail", b =>
                {
                    b.HasOne("pry20220181_core_layer.Modules.Campaigns.Models.VaccinationCampaign", "VaccinationCampaign")
                        .WithMany("VaccinationCampaignDetails")
                        .HasForeignKey("VaccinationCampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pry20220181_core_layer.Modules.Vaccination.Models.Vaccine", "Vaccine")
                        .WithMany()
                        .HasForeignKey("VaccineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VaccinationCampaign");

                    b.Navigation("Vaccine");
                });

            modelBuilder.Entity("pry20220181_core_layer.Modules.Campaigns.Models.VaccinationCampaignLocation", b =>
                {
                    b.HasOne("pry20220181_core_layer.Modules.Vaccination.Models.HealthCenter", "HealthCenter")
                        .WithMany("VaccinationCampaignLocations")
                        .HasForeignKey("HealthCenterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pry20220181_core_layer.Modules.Campaigns.Models.VaccinationCampaign", "VaccinationCampaign")
                        .WithMany("VaccinationCampaignLocations")
                        .HasForeignKey("VaccinationCampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HealthCenter");

                    b.Navigation("VaccinationCampaign");
                });

            modelBuilder.Entity("pry20220181_core_layer.Modules.Inventory.Models.VaccineInventory", b =>
                {
                    b.HasOne("pry20220181_core_layer.Modules.Vaccination.Models.HealthCenter", "HealthCenter")
                        .WithMany("VaccineInventories")
                        .HasForeignKey("HealthCenterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pry20220181_core_layer.Modules.Vaccination.Models.Vaccine", "Vaccine")
                        .WithMany()
                        .HasForeignKey("VaccineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HealthCenter");

                    b.Navigation("Vaccine");
                });

            modelBuilder.Entity("pry20220181_core_layer.Modules.Master.Models.Reminder", b =>
                {
                    b.HasOne("pry20220181_core_layer.Modules.Vaccination.Models.DoseDetail", "DoseDetail")
                        .WithMany()
                        .HasForeignKey("DoseDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pry20220181_core_layer.Modules.Vaccination.Models.Parent", "Parent")
                        .WithMany("Reminders")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pry20220181_core_layer.Modules.Vaccination.Models.VaccinationAppointment", "VaccinationAppointment")
                        .WithMany()
                        .HasForeignKey("VaccinationAppointmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pry20220181_core_layer.Modules.Campaigns.Models.VaccinationCampaign", "VaccinationCampaign")
                        .WithMany()
                        .HasForeignKey("VaccinationCampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DoseDetail");

                    b.Navigation("Parent");

                    b.Navigation("VaccinationAppointment");

                    b.Navigation("VaccinationCampaign");
                });

            modelBuilder.Entity("pry20220181_core_layer.Modules.Vaccination.Models.AdministeredDose", b =>
                {
                    b.HasOne("pry20220181_core_layer.Modules.Vaccination.Models.Child", "Child")
                        .WithMany("AdministeredDoses")
                        .HasForeignKey("ChildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pry20220181_core_layer.Modules.Vaccination.Models.DoseDetail", "DoseDetail")
                        .WithMany()
                        .HasForeignKey("DoseDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pry20220181_core_layer.Modules.Vaccination.Models.HealthCenter", "HealthCenter")
                        .WithMany()
                        .HasForeignKey("HealthCenterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pry20220181_core_layer.Modules.Vaccination.Models.HealthPersonnel", "HealthPersonnel")
                        .WithMany()
                        .HasForeignKey("HealthPersonnelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pry20220181_core_layer.Modules.Vaccination.Models.VaccinationAppointment", "VaccinationAppointment")
                        .WithMany()
                        .HasForeignKey("VaccinationAppointmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pry20220181_core_layer.Modules.Campaigns.Models.VaccinationCampaign", "VaccinationCampaign")
                        .WithMany()
                        .HasForeignKey("VaccinationCampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Child");

                    b.Navigation("DoseDetail");

                    b.Navigation("HealthCenter");

                    b.Navigation("HealthPersonnel");

                    b.Navigation("VaccinationAppointment");

                    b.Navigation("VaccinationCampaign");
                });

            modelBuilder.Entity("pry20220181_core_layer.Modules.Vaccination.Models.ChildParent", b =>
                {
                    b.HasOne("pry20220181_core_layer.Modules.Vaccination.Models.Child", "Child")
                        .WithMany("ChildParents")
                        .HasForeignKey("ChildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pry20220181_core_layer.Modules.Vaccination.Models.Parent", "Parent")
                        .WithMany("ChildParents")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Child");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("pry20220181_core_layer.Modules.Vaccination.Models.DoseDetail", b =>
                {
                    b.HasOne("pry20220181_core_layer.Modules.Vaccination.Models.VaccinationSchemeDetail", "VaccinationSchemeDetail")
                        .WithMany("DosesDetails")
                        .HasForeignKey("VaccinationSchemeDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VaccinationSchemeDetail");
                });

            modelBuilder.Entity("pry20220181_core_layer.Modules.Vaccination.Models.HealthCenter", b =>
                {
                    b.HasOne("pry20220181_core_layer.Modules.Vaccination.Models.Ubigeo", "Ubigeo")
                        .WithMany("HealthCenters")
                        .HasForeignKey("UbigeoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ubigeo");
                });

            modelBuilder.Entity("pry20220181_core_layer.Modules.Vaccination.Models.HealthPersonnel", b =>
                {
                    b.HasOne("pry20220181_core_layer.Modules.Vaccination.Models.User", "User")
                        .WithOne("HealthPersonnel")
                        .HasForeignKey("pry20220181_core_layer.Modules.Vaccination.Models.HealthPersonnel", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("pry20220181_core_layer.Modules.Vaccination.Models.Parent", b =>
                {
                    b.HasOne("pry20220181_core_layer.Modules.Vaccination.Models.Ubigeo", "Ubigeo")
                        .WithMany()
                        .HasForeignKey("UbigeoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pry20220181_core_layer.Modules.Vaccination.Models.User", "User")
                        .WithOne("Parent")
                        .HasForeignKey("pry20220181_core_layer.Modules.Vaccination.Models.Parent", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ubigeo");

                    b.Navigation("User");
                });

            modelBuilder.Entity("pry20220181_core_layer.Modules.Vaccination.Models.VaccinationAppointment", b =>
                {
                    b.HasOne("pry20220181_core_layer.Modules.Vaccination.Models.HealthCenter", "HealthCenter")
                        .WithMany()
                        .HasForeignKey("HealthCenterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pry20220181_core_layer.Modules.Vaccination.Models.Parent", "Parent")
                        .WithMany("VaccinationAppointments")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HealthCenter");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("pry20220181_core_layer.Modules.Vaccination.Models.VaccinationSchemeDetail", b =>
                {
                    b.HasOne("pry20220181_core_layer.Modules.Vaccination.Models.VaccinationScheme", "VaccinationScheme")
                        .WithMany("VaccinationSchemeDetails")
                        .HasForeignKey("VaccinationSchemeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pry20220181_core_layer.Modules.Vaccination.Models.Vaccine", "Vaccine")
                        .WithMany()
                        .HasForeignKey("VaccineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VaccinationScheme");

                    b.Navigation("Vaccine");
                });

            modelBuilder.Entity("pry20220181_core_layer.Modules.Vaccination.Models.VaccineForAppointment", b =>
                {
                    b.HasOne("pry20220181_core_layer.Modules.Vaccination.Models.VaccinationAppointment", "VaccinationAppointment")
                        .WithMany("VaccinesForAppointment")
                        .HasForeignKey("VaccinationAppointmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pry20220181_core_layer.Modules.Vaccination.Models.Vaccine", "Vaccine")
                        .WithMany()
                        .HasForeignKey("VaccineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VaccinationAppointment");

                    b.Navigation("Vaccine");
                });

            modelBuilder.Entity("pry20220181_core_layer.Modules.Campaigns.Models.VaccinationCampaign", b =>
                {
                    b.Navigation("VaccinationCampaignDetails");

                    b.Navigation("VaccinationCampaignLocations");
                });

            modelBuilder.Entity("pry20220181_core_layer.Modules.Vaccination.Models.Child", b =>
                {
                    b.Navigation("AdministeredDoses");

                    b.Navigation("ChildParents");
                });

            modelBuilder.Entity("pry20220181_core_layer.Modules.Vaccination.Models.HealthCenter", b =>
                {
                    b.Navigation("VaccinationCampaignLocations");

                    b.Navigation("VaccineInventories");
                });

            modelBuilder.Entity("pry20220181_core_layer.Modules.Vaccination.Models.Parent", b =>
                {
                    b.Navigation("ChildParents");

                    b.Navigation("Reminders");

                    b.Navigation("VaccinationAppointments");
                });

            modelBuilder.Entity("pry20220181_core_layer.Modules.Vaccination.Models.Ubigeo", b =>
                {
                    b.Navigation("HealthCenters");
                });

            modelBuilder.Entity("pry20220181_core_layer.Modules.Vaccination.Models.User", b =>
                {
                    b.Navigation("HealthPersonnel")
                        .IsRequired();

                    b.Navigation("Parent")
                        .IsRequired();
                });

            modelBuilder.Entity("pry20220181_core_layer.Modules.Vaccination.Models.VaccinationAppointment", b =>
                {
                    b.Navigation("VaccinesForAppointment");
                });

            modelBuilder.Entity("pry20220181_core_layer.Modules.Vaccination.Models.VaccinationScheme", b =>
                {
                    b.Navigation("VaccinationSchemeDetails");
                });

            modelBuilder.Entity("pry20220181_core_layer.Modules.Vaccination.Models.VaccinationSchemeDetail", b =>
                {
                    b.Navigation("DosesDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
